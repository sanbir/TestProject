@model ContosoUniversity.ViewModels.EmployeeViewModel
@using Data.Models
@using PagedList.Mvc;
@using Utils
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Работники";
}

<h2>Работники</h2>

<p>
    @Html.ActionLink("Создать", "Create")
</p>
@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("Поиск", Model.Filter)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(new Employee().GetPropertyDisplayOrNameFor(e => e.LastName), "Index", new { Model.Sorting, Model.Filter })
        </th>
        <th>
            @Html.ActionLink(new Employee().GetPropertyDisplayOrNameFor(e => e.FirstName), "Index", new { Model.Sorting, Model.Filter })
        </th>
        <th>
            @Html.ActionLink(new Employee().GetPropertyDisplayOrNameFor(e => e.MiddleName), "Index", new { Model.Sorting, Model.Filter })
        </th>
        <th>
            @Html.ActionLink(new Employee().GetPropertyDisplayOrNameFor(e => e.Email), "Index", new { Model.Sorting, Model.Filter })
        </th>
        <th>
            @Html.ActionLink(new Employee().GetPropertyDisplayOrNameFor(e => e.ContractorCompanyName), "Index", new { Model.Sorting, Model.Filter })
        </th>
        <th></th>
    </tr>


    @foreach (var item in Model.Employees)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContractorCompanyName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.Employees.PageCount < Model.Employees.PageNumber ? 0 : Model.Employees.PageNumber) of @Model.Employees.PageCount

@Html.PagedListPager(Model.Employees, page => Url.Action("Index", new { page, Model.Sorting.SortOrder, Model.Filter }))