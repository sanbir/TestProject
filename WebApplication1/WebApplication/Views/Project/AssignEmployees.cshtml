@using PagedList.Mvc
@using Shared.Constants.Common
@using Shared.Constants.Employee
@using Shared.Constants.Project
@using Shared.Models
@using WebApplication.ViewModels
@model WebApplication.ViewModels.CreateProjectViewModel

@{
    ViewBag.Title = ViewStringConstants.Create;
}

<h2>@ViewStringConstants.Create</h2>

<div class="form-horizontal" data-ng-app="projectAssignEmployeesApp" data-ng-controller="projectAssignEmployeesController">
    <h4>@ViewStringConstants.AssignEmployeesToProjectTitle</h4>
    <hr />
    @using (Html.BeginForm("Index", "Employee", FormMethod.Get))
    {
        <p class="col-md-9 form-horizontal form-inline form-group">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            <input type="submit" value=@ViewStringConstants.Search class="btn btn-default" />
        </p>
    }

    @*<div>
        <table class="table table-striped table-condensed table-hover">
            <thead>
                <tr>
                    <th class="firstName" custom-sort order="'firstName'" sort="sort">firstName&nbsp;</th>
                    <th class="lastName" custom-sort order="'lastName'" sort="sort">lastName&nbsp;</th>
                    <th class="middleName" custom-sort order="'middleName'" sort="sort">middleName&nbsp;</th>
                    <th class="email" custom-sort order="'email'" sort="sort">email&nbsp;</th>
                    <th class="contractorCompanyName" custom-sort order="'contractorCompanyName'" sort="sort">contractorCompanyName&nbsp;</th>
                    <th class="isManager" custom-sort order="'isManager'" sort="sort">isManager&nbsp;</th>
                    <th class="isAssigned" custom-sort order="'isAssigned'" sort="sort">isAssigned&nbsp;</th>
                </tr>
            </thead>
            <tfoot>
            <td colspan="6">
                <div class="pagination-container">
                    <ul class="pagination">
                        <li ng-class="{disabled: currentPage == 0}">
                            <a href ng-click="prevPage()">« @ViewStringConstants.Back</a>
                        </li>

                        <li ng-repeat="n in range(pagedItems.length, currentPage, currentPage + gap) "
                            ng-class="{active: n == currentPage}"
                            ng-click="setPage()">
                            <a href ng-bind="n + 1">1</a>
                        </li>

                        <li ng-class="{disabled: (currentPage) == pagedItems.length - 1}">
                            <a href ng-click="nextPage()">@ViewStringConstants.Next »</a>
                        </li>
                    </ul>
                </div>
            </td>
            </tfoot>
            <pre>pagedItems.length: {{pagedItems.length|json}}</pre>
            <pre>currentPage: {{currentPage|json}}</pre>
            <pre>currentPage: {{sort|json}}</pre>
            <tbody>
                <tr ng-repeat="item in pagedItems[currentPage] | orderBy:sort.sortingOrder:sort.reverse">
                    <td>{{item.firstName}}</td>
                    <td>{{item.lastName}}</td>
                    <td>{{item.middleName}}</td>
                    <td>{{item.email}}</td>
                    <td>{{item.contractorCompanyName}}</td>
                    <td><input type="radio" data-set-manager data-ng-model="item.isManager"></td>
                    <td><input type="checkbox" data-assign-employee data-ng-model="item.isAssigned"></td>
                </tr>
            </tbody>
        </table>

    </div>*@
    <h1>{{project.managerId}}</h1>

    <table class="table">
        <tr>
            <th custom-sort order="'firstName'" sort="sort">firstName &nbsp;</th>
            <th custom-sort order="'lastName'" sort="sort">lastName &nbsp;</th>
            <th custom-sort order="'middleName'" sort="sort">middleName &nbsp;</th>
            <th custom-sort order="'email'" sort="sort">email</th>
            <th custom-sort order="'contractorCompanyName'" sort="sort">contractorCompanyName &nbsp;</th>
            <th>isManager</th>
            <th>isAssigned</th>
            <th></th>
        </tr>

        <tr ng-repeat="item in pagedItems[currentPage] | orderBy:sort.sortingOrder:sort.reverse">
            <td>{{item.firstName}}</td>
            <td>{{item.lastName}}</td>
            <td>{{item.middleName}}</td>
            <td>{{item.email}}</td>
            <td>{{item.contractorCompanyName}}</td>
            <td><input name="isManagerRadio" type="radio" data-assign-if-manager data-ng-value="item.id" data-ng-model="$parent.project.managerId"></td>
            <td><input type="checkbox" data-assign-employee data-ng-disabled="item.id == $parent.project.managerId" data-ng-model="item.isAssigned"></td>
        </tr>
        
        <tr>
            <td>
                <ul class="pagination">
                    <li ng-class="{disabled: currentPage == 0}">
                        <a href ng-click="prevPage()">« @ViewStringConstants.Back</a>
                    </li>

                    <li ng-repeat="n in range(pagedItems.length, currentPage, currentPage + gap) "
                        ng-class="{active: n == currentPage}"
                        ng-click="setPage()">
                        <a href ng-bind="n + 1">1</a>
                    </li>

                    <li ng-class="{disabled: (currentPage) == pagedItems.length - 1}">
                        <a href ng-click="nextPage()">@ViewStringConstants.Next »</a>
                    </li>
                </ul>
            </td>
        </tr>
        <pre>pagedItems.length: {{pagedItems.length|json}}</pre>
        <pre>currentPage: {{currentPage|json}}</pre>
        <pre>currentPage: {{sort|json}}</pre>
    </table>

    <hr />
  
    @Html.Label(ViewStringConstants.ProjectsEmployeesTitle, htmlAttributes: new { @class = "control-label col-md-2" })

    <div class="col-md-offset-2 col-md-10">
        <table class="table">
            <tr>
                <th>firstName</th>
                <th>lastName</th>
                <th>middleName</th>
                <th>isManager</th>
                <th>Unassign</th>
            </tr>

            <tr data-ng-repeat="item in assignedEmployees | filter:{isAssigned:true}">
                <td>{{item.firstName}}</td>
                <td>{{item.lastName}}</td>
                <td>{{item.middleName}}</td>
                <td><input name="assignedIsManagerRadio" type="radio" data-assign-if-manager data-ng-value="item.id" data-ng-model="$parent.project.managerId"></td>
                <td><input type="checkbox" data-assign-employee data-ng-model="item.isAssigned"></td>
            </tr>
        </table>
    </div>
    
    <br />
    
    @*<div class="form-group">
            @Html.LabelFor(model => model.Project.ManagerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerFullName, new { htmlAttributes = new { @class = "form-control", @readonly = string.Empty, placeholder = Html.DisplayNameFor(model => model.Project.ManagerId) } })
                @Html.ValidationMessageFor(model => model.Project.ManagerId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.Project.ManagerId)*@
    <div class="form-group">
        
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value=@ViewStringConstants.Create class="btn btn-default" />
        </div>
    </div>
</div>

<div>
    @Html.ActionLink(ViewStringConstants.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/Scripts/angular.min.js")*@
    @*@Scripts.Render("~/bundles/AngularEmployeeIndex")*@
    <script src="~/Scripts/angular.min.js"></script>

    <script src="~/js/ProjectAssignEmployeesApp/ProjectAssignEmployeesApp.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/Directives/AssignEmployee.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/Directives/CustomSort.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/Factories/EmployeesPageFactory.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/Factories/ProjectAssignEmployeesFactories.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/Factories/ProjectFactory.js"></script>
    <script src="~/js/ProjectAssignEmployeesApp/ProjectAssignEmployeesController.js"></script>
<script src="~/js/ProjectAssignEmployeesApp/Directives/AssignIfManager.js"></script>
}
