@using PagedList.Mvc
@using Shared.Constants.Common
@using Shared.Constants.Employee
@using Shared.Constants.Project
@using Shared.Models
@using WebApplication.ViewModels
@model string
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = ViewBag.ActionToPerform;
}

<h2>@ViewBag.ActionToPerform</h2>

<div class="form-horizontal" data-ng-app="projectAssignEmployeesApp" data-ng-controller="projectAssignEmployeesController">
    <h4>@ViewStringConstants.AssignEmployeesToProjectTitle</h4>
    <hr />

    <p class="col-md-9 form-horizontal form-inline form-group">
        <input type="text" class="form-control" data-ng-model="searchString" />
        <input type="button" value=@ViewStringConstants.Search class="btn btn-default" data-ng-click="getEmployees()" />
    </p>

    <table class="table">
        <tr>
            <th>@EmployeeProperties.LastNameDisplay &nbsp;</th>
            <th>@EmployeeProperties.FirstNameDisplay &nbsp;</th>
            <th>@EmployeeProperties.MiddleNameDisplay &nbsp;</th>
            <th>@EmployeeProperties.EmailDisplay &nbsp;</th>
            <th>@EmployeeProperties.ContractorCompanyNameDisplay &nbsp;</th>
            <th>isManager</th>
            <th>isAssigned</th>
        </tr>

        <tr ng-repeat="item in employeesPage">
            <td>{{item.lastName}}</td>
            <td>{{item.firstName}}</td>
            <td>{{item.middleName}}</td>
            <td>{{item.email}}</td>
            <td>{{item.contractorCompanyName}}</td>
            <td><input name="isManagerRadio" type="radio" data-assign-if-manager data-ng-value="item.id" data-ng-model="$parent.project.managerId"></td>
            <td><input type="checkbox" data-assign-employee data-ng-disabled="item.id == $parent.project.managerId" data-ng-model="item.isAssigned"></td>
        </tr>

    </table>

    <div class="pagination-container">
        <ul class="pagination">
            <li class="PagedList-skipToFirst" data-ng-show="paging.pageNumber - paging.gap > 1">
                <a href="" ng-click="firstPage()">««</a>
            </li>
            <li class="PagedList-skipToPrevious" data-ng-show="paging.pageNumber - paging.gap > 1">
                <a href="" ng-click="prevPage()">«</a>
            </li>
            <li class="disabled PagedList-ellipses" data-ng-show="paging.pageNumber - paging.gap > 1">
                <a>…</a>
            </li>
            <li ng-repeat="n in range(paging.pageCount, paging.pageNumber, paging.pageNumber + paging.gap) "
                ng-class="{active: n == paging.pageNumber}"
                ng-click="setPage()">
                <a href="">{{ n }}</a>
            </li>
            <li class="disabled PagedList-ellipses" data-ng-show="paging.pageNumber + paging.gap < paging.pageCount">
                <a>…</a>
            </li>
            <li class="PagedList-skipToNext" data-ng-show="paging.pageNumber + paging.gap < paging.pageCount">
                <a href="" ng-click="nextPage()">»</a>
            </li>
            <li class="PagedList-skipToLast" data-ng-show="paging.pageNumber + paging.gap < paging.pageCount">
                <a href="" ng-click="lastPage()">»»</a>
            </li>
        </ul>
    </div>


    @Html.Label(ProjectProperties.ManagerIdDisplay, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <span class="form-control" readonly>{{ managerFullName }}</span>
    </div>

    <hr />

    <div data-ng-show="filteredEmployees.length > 0">
        @Html.Label(ViewStringConstants.ProjectsEmployeesTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-offset-2 col-md-10">
            <table class="table">
                <tr>
                    <th></th>
                    <th>Снять с проекта</th>
                </tr>
                <tr data-ng-repeat="item in filteredEmployees = (assignedEmployees | filter:{isAssigned:true})">
                    <td>{{item.lastName}} {{item.firstName}} {{item.middleName}}</td>
                    <td><input type="checkbox" data-assign-employee data-ng-model="item.isAssigned"></td>
                </tr>
            </table>
        </div>
    </div>

    <br />

    <div class="col-md-offset-2 col-md-10">
        <input type="button" value=@ViewStringConstants.Save class="btn btn-success" data-ng-click="sendData()" />
    </div>
</div>

<div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @*@Scripts.Render("~/Scripts/angular.min.js")*@
        @*@Scripts.Render("~/bundles/AngularEmployeeIndex")*@
        <script src="~/Scripts/angular.min.js"></script>

        <script src="~/js/ProjectAssignEmployeesApp/ProjectAssignEmployeesApp.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Directives/AssignEmployee.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Directives/CustomSort.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Factories/EmployeesPageFactory.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Factories/ProjectAssignEmployeesFactories.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Factories/ProjectFactory.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/ProjectAssignEmployeesController.js"></script>
        <script src="~/js/ProjectAssignEmployeesApp/Directives/AssignIfManager.js"></script>

        <script type="text/javascript" language="javascript">

        var projectFactory = function () {

            var project = @Html.Raw(Model);

            project.id = 0;
            project.managerId = 0;
            project.assignedEmployeesIds = [];

            return project;
        };
        angular.module('projectAssignEmployeesApp').factory('projectFactory', projectFactory);

        </script>
    }
</div>
